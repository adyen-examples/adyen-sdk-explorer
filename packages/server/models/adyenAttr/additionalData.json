[
  {
    "properties": [
      {
        "description": "Indicates if you are able to process 3D Secure 2 transactions natively on your payment page. Send this parameter when you are using `/payments` endpoint with any of our [native 3D Secure 2 solutions](https://docs.adyen.com/online-payments/3d-secure/native-3ds2).\n\n > This parameter only indicates readiness to support native 3D Secure 2 authentication. To specify if you _want_ to perform 3D Secure, use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure) or send the `executeThreeD` parameter.\n\nPossible values:\n* **true** - Ready to support native 3D Secure 2 authentication. Setting this to true does not mean always applying 3D Secure 2. Adyen still selects the version of 3D Secure based on configuration to optimize authorisation rates and improve the shopper's experience.\n* **false** – Not ready to support native 3D Secure 2 authentication. Adyen will not offer 3D Secure 2 to your shopper regardless of your configuration.\n",
        "type": "string",
        "name": "allow3DS2"
      },
      {
        "description": "Indicates if you want to perform 3D Secure authentication on a transaction.\n\n > Alternatively, you can use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure) to configure rules for applying 3D Secure.\n\nPossible values:\n* **true** – Perform 3D Secure authentication.\n* **false** – Don't perform 3D Secure authentication. Note that this setting results in refusals if the issuer mandates 3D Secure because of the PSD2 directive  or other, national regulations. \n",
        "type": "string",
        "name": "executeThreeD"
      },
      {
        "description": "In case of Secure+, this field must be set to **CUPSecurePlus**.",
        "type": "string",
        "name": "mpiImplementationType"
      },
      {
        "description": "Indicates the [exemption type](https://docs.adyen.com/payments-fundamentals/psd2-sca-compliance-and-implementation-guide#specifypreferenceinyourapirequest) that you want to request for the transaction.\n\n Possible values:\n* **lowValue** \n* **secureCorporate** \n* **trustedBeneficiary** \n* **transactionRiskAnalysis** ",
        "type": "string",
        "name": "scaExemption"
      },
      {
        "description": "Indicates your preference for the 3D Secure version. \n> If you use this parameter, you override the checks from Adyen's Authentication Engine. We recommend to use this field only if you have an extensive knowledge of 3D Secure.\n\nPossible values:\n* **1.0.2**: Apply 3D Secure version 1.0.2. \n* **2.1.0**: Apply 3D Secure version 2.1.0. \n* **2.2.0**: Apply 3D Secure version 2.2.0. If the issuer does not support version 2.2.0, we will fall back to 2.1.0.\n\nThe following rules apply:\n* If you prefer 2.1.0 or 2.2.0 but we receive a negative `transStatus` in the `ARes`, we will apply the fallback policy configured in your account. For example, if the configuration is to fall back to 3D Secure 1, we will apply version 1.0.2.\n* If you prefer 2.1.0 or 2.2.0 but the BIN is not enrolled, you will receive an error.\n\n",
        "type": "string",
        "name": "threeDSVersion"
      }
    ],
    "name": "AdditionalData3DSecure"
  },
  {
    "properties": [
      {
        "description": "Reference number for the invoice, issued by the agency.\n* minLength: 1\n* maxLength: 6",
        "type": "string",
        "name": "airline.agency_invoice_number"
      },
      {
        "description": "2-letter agency plan identifier; alphabetical.\n* minLength: 2\n* maxLength: 2",
        "type": "string",
        "name": "airline.agency_plan_name"
      },
      {
        "description": "[IATA](https://www.iata.org/services/pages/codes.aspx) 3-digit accounting code (PAX); numeric. It identifies the carrier.\n* Format: IATA 3-digit accounting code (PAX)\n* Example: KLM = 074\n* minLength: 3\n* maxLength: 3",
        "type": "string",
        "name": "airline.airline_code"
      },
      {
        "description": "[IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX); alphabetical. It identifies the carrier.\n* Format: [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter airline code\n* Example: KLM = KL\n* minLength: 2\n* maxLength: 2",
        "type": "string",
        "name": "airline.airline_designator_code"
      },
      {
        "description": "Chargeable amount for boarding the plane.\nThe transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).\n* minLength: 1\n* maxLength: 18",
        "type": "string",
        "name": "airline.boarding_fee"
      },
      {
        "description": "The [CRS](https://en.wikipedia.org/wiki/Computer_reservation_system) used to make the reservation and purchase the ticket.\n* Format: alphanumeric.\n* minLength: 4\n* maxLength: 4",
        "type": "string",
        "name": "airline.computerized_reservation_system"
      },
      {
        "description": "Reference number; alphanumeric.\n* minLength: 0\n* maxLength: 20",
        "type": "string",
        "name": "airline.customer_reference_number"
      },
      {
        "description": "Optional 2-digit code; alphanumeric. It identifies the type of product of the transaction. The description of the code may appear on credit card statements.\n* Format: 2-digit code\n* Example: Passenger ticket = 01\n* minLength: 2\n* maxLength: 2",
        "type": "string",
        "name": "airline.document_type"
      },
      {
        "description": "Flight departure date. Local time `(HH:mm)` is optional.\n* Date format: `yyyy-MM-dd`\n* Date and time format: `yyyy-MM-dd HH:mm`\n* minLength: 10\n* maxLength: 16",
        "type": "string",
        "name": "airline.flight_date"
      },
      {
        "description": "[IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX); alphabetical. It identifies the carrier.\nThis field is required/mandatory if the airline data includes leg details.\n* Format: IATA 2-letter airline code\n* Example: KLM = KL\n* minLength: 2\n* maxLength: 2",
        "type": "string",
        "name": "airline.leg.carrier_code"
      },
      {
        "description": "1-letter travel class identifier; alphabetical. There is no standard; however, the following codes are used rather consistently:\n* F: first class\n* J: business class\n* Y: economy class\n* W: premium economy\n\nLimitations:\n* minLength: 1\n* maxLength: 1",
        "type": "string",
        "name": "airline.leg.class_of_travel"
      },
      {
        "description": "\t\nDate and time of travel. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-compliant.\n* Format: `yyyy-MM-dd HH:mm`\n* minLength: 16\n* maxLength: 16",
        "type": "string",
        "name": "airline.leg.date_of_travel"
      },
      {
        "description": "Alphabetical identifier of the departure airport.\nThis field is required if the airline data includes leg details.\n* Format: [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code.\n* Example: Amsterdam = AMS\n* minLength: 3\n* maxLength: 3",
        "type": "string",
        "name": "airline.leg.depart_airport"
      },
      {
        "description": "[Departure tax](https://en.wikipedia.org/wiki/Departure_tax). Amount charged by a country to an individual upon their leaving. The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).\n* minLength: 1\n* maxLength: 12",
        "type": "string",
        "name": "airline.leg.depart_tax"
      },
      {
        "description": "Alphabetical identifier of the destination/arrival airport.\nThis field is required/mandatory if the airline data includes leg details.\n* Format: [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code.\n* Example: Amsterdam = AMS\n* minLength: 3\n* maxLength: 3",
        "type": "string",
        "name": "airline.leg.destination_code"
      },
      {
        "description": "[Fare basis code](https://en.wikipedia.org/wiki/Fare_basis_code); alphanumeric.\n* minLength: 1\n* maxLength: 7",
        "type": "string",
        "name": "airline.leg.fare_base_code"
      },
      {
        "description": "The flight identifier.\n* minLength: 1\n* maxLength: 5",
        "type": "string",
        "name": "airline.leg.flight_number"
      },
      {
        "description": "1-letter code that indicates whether the passenger is entitled to make a stopover. Only two types of characters are allowed:\n* O: Stopover allowed\n* X: Stopover not allowed\n\nLimitations:\n* minLength: 1\n* maxLength: 1",
        "type": "string",
        "name": "airline.leg.stop_over_code"
      },
      {
        "description": "Date of birth of the passenger.\n\nDate format: `yyyy-MM-dd`\n* minLength: 10\n* maxLength: 10",
        "type": "string",
        "name": "airline.passenger.date_of_birth"
      },
      {
        "description": "Passenger first name/given name.\n> This field is required/mandatory if the airline data includes passenger details or leg details.",
        "type": "string",
        "name": "airline.passenger.first_name"
      },
      {
        "description": "Passenger last name/family name.\n> This field is required/mandatory if the airline data includes passenger details or leg details.",
        "type": "string",
        "name": "airline.passenger.last_name"
      },
      {
        "description": "Telephone number of the passenger, including country code. This is an alphanumeric field that can include the '+' and '-' signs.\n* minLength: 3\n* maxLength: 30",
        "type": "string",
        "name": "airline.passenger.telephone_number"
      },
      {
        "description": "Passenger type code (PTC). IATA PTC values are 3-letter alphabetical. Example: ADT, SRC, CNN, INS.\n\nHowever, several carriers use non-standard codes that can be up to 5 alphanumeric characters.\n* minLength: 3\n* maxLength: 6",
        "type": "string",
        "name": "airline.passenger.traveller_type"
      },
      {
        "description": "Passenger name, initials, and a title.\n* Format: last name + first name or initials + title.\n* Example: *FLYER / MARY MS*.\n* minLength: 1\n* maxLength: 49",
        "type": "string",
        "name": "airline.passenger_name"
      },
      {
        "description": "Address of the place/agency that issued the ticket.\n* minLength: 0\n* maxLength: 16",
        "type": "string",
        "name": "airline.ticket_issue_address"
      },
      {
        "description": "The ticket's unique identifier.\n* minLength: 1\n* maxLength: 150",
        "type": "string",
        "name": "airline.ticket_number"
      },
      {
        "description": "IATA number, also ARC number or ARC/IATA number. Unique identifier number for travel agencies.\n* minLength: 1\n* maxLength: 8",
        "type": "string",
        "name": "airline.travel_agency_code"
      },
      {
        "description": "The name of the travel agency.\n* minLength: 1\n* maxLength: 25",
        "type": "string",
        "name": "airline.travel_agency_name"
      }
    ],
    "required": ["airline.passenger_name"],
    "name": "AdditionalDataAirline"
  },
  {
    "properties": [
      {
        "description": "Pick-up date.\n* Date format: `yyyyMMdd`",
        "type": "string",
        "name": "carRental.checkOutDate"
      },
      {
        "description": "The customer service phone number of the car rental company.\n* Format: Alphanumeric\n* maxLength: 17",
        "type": "string",
        "name": "carRental.customerServiceTollFreeNumber"
      },
      {
        "description": "Number of days for which the car is being rented.\n* Format: Numeric\n* maxLength: 19",
        "type": "string",
        "name": "carRental.daysRented"
      },
      {
        "description": "Any fuel charges associated with the rental.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "carRental.fuelCharges"
      },
      {
        "description": "Any insurance charges associated with the rental.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "carRental.insuranceCharges"
      },
      {
        "description": "The city from which the car is rented.\n* Format: Alphanumeric\n* maxLength: 18",
        "type": "string",
        "name": "carRental.locationCity"
      },
      {
        "description": "The country from which the car is rented.\n* Format: Alphanumeric\n* maxLength: 2",
        "type": "string",
        "name": "carRental.locationCountry"
      },
      {
        "description": "The state or province from where the car is rented.\n* Format: Alphanumeric\n* maxLength: 3",
        "type": "string",
        "name": "carRental.locationStateProvince"
      },
      {
        "description": "Indicates if the customer was a \"no-show\" (neither keeps nor cancels their booking).\n* Y - Customer was a no show.\n* N - Not applicable.",
        "type": "string",
        "name": "carRental.noShowIndicator"
      },
      {
        "description": "Charge associated with not returning a vehicle to the original rental location.",
        "type": "string",
        "name": "carRental.oneWayDropOffCharges"
      },
      {
        "description": "Daily rental rate.\n* Format: Alphanumeric\n* maxLength: 12",
        "type": "string",
        "name": "carRental.rate"
      },
      {
        "description": "Specifies whether the given rate is applied daily or weekly.\n* D - Daily rate.\n* W - Weekly rate.",
        "type": "string",
        "name": "carRental.rateIndicator"
      },
      {
        "description": "The rental agreement number associated with this car rental.\n* Format: Alphanumeric\n* maxLength: 9",
        "type": "string",
        "name": "carRental.rentalAgreementNumber"
      },
      {
        "description": "Daily rental rate.\n* Format: Alphanumeric\n* maxLength: 12",
        "type": "string",
        "name": "carRental.rentalClassId"
      },
      {
        "description": "The name of the person renting the car.\n* Format: Alphanumeric\n* maxLength: 26",
        "type": "string",
        "name": "carRental.renterName"
      },
      {
        "description": "The city where the car must be returned.\n* Format: Alphanumeric\n* maxLength: 18",
        "type": "string",
        "name": "carRental.returnCity"
      },
      {
        "description": "The country where the car must be returned.\n* Format: Alphanumeric\n* maxLength: 2",
        "type": "string",
        "name": "carRental.returnCountry"
      },
      {
        "description": "The last date to return the car by.\n* Date format: `yyyyMMdd`",
        "type": "string",
        "name": "carRental.returnDate"
      },
      {
        "description": "Agency code, phone number, or address abbreviation\n* Format: Alphanumeric\n* maxLength: 10",
        "type": "string",
        "name": "carRental.returnLocationId"
      },
      {
        "description": "The state or province where the car must be returned.\n* Format: Alphanumeric\n* maxLength: 3",
        "type": "string",
        "name": "carRental.returnStateProvince"
      },
      {
        "description": "Indicates whether the goods or services were tax-exempt, or tax was not collected.\n\nValues:\n* Y - Goods or services were tax exempt\n* N - Tax was not collected",
        "type": "string",
        "name": "carRental.taxExemptIndicator"
      },
      {
        "description": "Number of nights.  This should be included in the auth message.\n* Format: Numeric\n* maxLength: 2",
        "type": "string",
        "name": "travelEntertainmentAuthData.duration"
      },
      {
        "description": "Indicates what market-specific dataset will be submitted or is being submitted. Value should be \"A\" for Car rental. This should be included in the auth message.\n* Format: Alphanumeric\n* maxLength: 1",
        "type": "string",
        "name": "travelEntertainmentAuthData.market"
      }
    ],
    "name": "AdditionalDataCarRental"
  },
  {
    "properties": [
      {
        "description": "Triggers test scenarios that allow to replicate certain communication errors.\n\nAllowed values:\n* **NO_CONNECTION_AVAILABLE** – There wasn't a connection available to service the outgoing communication.\nThis is a transient, retriable error since no messaging could be initiated to an issuing system (or third-party acquiring system). Therefore, the header Transient-Error: true is returned in the response. A subsequent request using the same idempotency key will be processed as if it was the first request.\n* **IOEXCEPTION_RECEIVED** – Something went wrong during transmission of the message or receiving the response.\nThis is a classified as non-transient because the message could have been received by the issuing party and been acted upon. No transient error header is returned. If using idempotency, the (error) response is stored as the final result for the idempotency key. Subsequent messages with the same idempotency key not be processed beyond returning the stored response.",
        "type": "string",
        "name": "RequestedTestErrorResponseCode"
      },
      {
        "description": "Flags a card payment request for either pre-authorisation or final authorisation. For more information, refer to [Authorisation types](https://docs.adyen.com/online-payments/adjust-authorisation#authorisation-types).\n\nAllowed values:\n* **PreAuth** – flags the payment request to be handled as a pre-authorisation.\n* **FinalAuth** – flags the payment request to be handled as a final authorisation.",
        "type": "string",
        "name": "authorisationType"
      },
      {
        "description": "Allows you to determine or override the acquirer account that should be used for the transaction.\n\nIf you need to process a payment with an acquirer different from a default one, you can set up a corresponding configuration on the Adyen payments platform. Then you can pass a custom routing flag in a payment request's additional data to target a specific acquirer.\n\nTo enable this functionality, contact [Support](https://support.adyen.com/hc/en-us/requests/new).",
        "type": "string",
        "name": "customRoutingFlag"
      },
      {
        "x-enum": [
          {
            "description": "An incremental charge is carried out because of a no-show for a guaranteed reservation.",
            "value": "NoShow"
          },
          {
            "description": "An incremental charge is carried out to process an additional payment after the original services have been rendered and the respective payment has been processed.",
            "value": "DelayedCharge"
          }
        ],
        "description": "In case of [asynchronous authorisation adjustment](https://docs.adyen.com/online-payments/adjust-authorisation#adjust-authorisation), this field denotes why the additional payment is made.\n\nPossible values:\n\n * **NoShow**: An incremental charge is carried out because of a no-show for a guaranteed reservation.\n\n * **DelayedCharge**: An incremental charge is carried out to process an additional payment after the original services have been rendered and the respective payment has been processed.",
        "enum": ["NoShow", "DelayedCharge"],
        "type": "string",
        "name": "industryUsage"
      },
      {
        "description": "Allows you to link the transaction to the original or previous one in a subscription/card-on-file chain. This field is required for token-based transactions where Adyen does not tokenize the card.\n\nTransaction identifier from card schemes, for example, Mastercard Trace ID or the Visa Transaction ID.\n\nSubmit the original transaction ID of the contract in your payment request if you are not tokenizing card details with Adyen and are making a merchant-initiated transaction (MIT) for subsequent charges.\n\nMake sure you are sending `shopperInteraction` **ContAuth** and `recurringProcessingModel` **Subscription** or **UnscheduledCardOnFile** to ensure that the transaction is classified as MIT.",
        "type": "string",
        "name": "networkTxReference"
      },
      {
        "description": "Boolean indicator that can be optionally used for performing debit transactions on combo cards (for example, combo cards in Brazil). This is not mandatory but we recommend that you set this to true if you want to use the `selectedBrand` value to specify how to process the transaction.",
        "type": "string",
        "name": "overwriteBrand"
      },
      {
        "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the city of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 13 characters.",
        "type": "string",
        "name": "subMerchantCity"
      },
      {
        "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the three-letter country code of the actual merchant's address.\n* Format: alpha-numeric.\n* Fixed length: 3 characters.",
        "type": "string",
        "name": "subMerchantCountry"
      },
      {
        "description": "This field contains an identifier of the actual merchant when a transaction is submitted via a payment facilitator. The payment facilitator must send in this unique ID.\n\nA unique identifier per submerchant that is required if the transaction is performed by a registered payment facilitator.\n* Format: alpha-numeric.\n* Fixed length: 15 characters.",
        "type": "string",
        "name": "subMerchantID"
      },
      {
        "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the name of the actual merchant.\n* Format: alpha-numeric.\n* Maximum length: 22 characters.",
        "type": "string",
        "name": "subMerchantName"
      },
      {
        "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the postal code of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 10 characters.",
        "type": "string",
        "name": "subMerchantPostalCode"
      },
      {
        "description": "This field is required if the transaction is performed by a registered payment facilitator, and if applicable to the country. This field must contain the state code of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 3 characters.",
        "type": "string",
        "name": "subMerchantState"
      },
      {
        "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the street of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 60 characters.",
        "type": "string",
        "name": "subMerchantStreet"
      },
      {
        "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the tax ID of the actual merchant.\n* Format: alpha-numeric.\n* Fixed length: 11 or 14 characters.",
        "type": "string",
        "name": "subMerchantTaxId"
      }
    ],
    "name": "AdditionalDataCommon"
  },
  {
    "properties": [
      {
        "description": "Customer code, if supplied by a customer.\n\nEncoding: ASCII.\n\nMax length: 25 characters.\n\n> Required for Level 2 and Level 3 data.",
        "type": "string",
        "name": "enhancedSchemeData.customerReference"
      },
      {
        "description": "Destination country code.\n\nEncoding: ASCII.\n\nMax length: 3 characters.",
        "type": "string",
        "name": "enhancedSchemeData.destinationCountryCode"
      },
      {
        "description": "The postal code of a destination address.\n\nEncoding: ASCII.\n\nMax length: 10 characters.\n\n> Required for American Express.",
        "type": "string",
        "name": "enhancedSchemeData.destinationPostalCode"
      },
      {
        "description": "Destination state or province code.\n\nEncoding: ASCII.Max length: 3 characters.",
        "type": "string",
        "name": "enhancedSchemeData.destinationStateProvinceCode"
      },
      {
        "description": "Duty amount, in minor units.\n\nFor example, 2000 means USD 20.00.\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.dutyAmount"
      },
      {
        "description": "Shipping amount, in minor units.\n\nFor example, 2000 means USD 20.00.\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.freightAmount"
      },
      {
        "description": "Item commodity code.\n\nEncoding: ASCII.\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].commodityCode"
      },
      {
        "description": "Item description.\n\nEncoding: ASCII.\n\nMax length: 26 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].description"
      },
      {
        "description": "Discount amount, in minor units.\n\nFor example, 2000 means USD 20.00.\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].discountAmount"
      },
      {
        "description": "Product code.\n\nEncoding: ASCII.\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].productCode"
      },
      {
        "description": "Quantity, specified as an integer value.\n\nValue must be greater than 0.\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].quantity"
      },
      {
        "description": "Total amount, in minor units.\n\nFor example, 2000 means USD 20.00.\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].totalAmount"
      },
      {
        "description": "Item unit of measurement.\n\nEncoding: ASCII.\n\nMax length: 3 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure"
      },
      {
        "description": "Unit price, specified in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n\nMax length: 12 characters.",
        "type": "string",
        "name": "enhancedSchemeData.itemDetailLine[itemNr].unitPrice"
      },
      {
        "description": "Order date.\n* Format: `ddMMyy`\n\nEncoding: ASCII.\n\nMax length: 6 characters.",
        "type": "string",
        "name": "enhancedSchemeData.orderDate"
      },
      {
        "description": "The postal code of a \"ship-from\" address.\n\nEncoding: ASCII.\n\nMax length: 10 characters.",
        "type": "string",
        "name": "enhancedSchemeData.shipFromPostalCode"
      },
      {
        "description": "Total tax amount, in minor units.\n\nFor example, 2000 means USD 20.00.\n\nMax length: 12 characters.\n\n> Required for Level 2 and Level 3 data.",
        "type": "string",
        "name": "enhancedSchemeData.totalTaxAmount"
      }
    ],
    "name": "AdditionalDataLevel23"
  },
  {
    "properties": [
      {
        "description": "The arrival date.\n* Date format: `yyyyMMdd`",
        "type": "string",
        "name": "lodging.checkInDate"
      },
      {
        "description": "The departure date.\n* Date format: `yyyyMMdd`",
        "type": "string",
        "name": "lodging.checkOutDate"
      },
      {
        "description": "The toll free phone number for the hotel/lodgings.\n* Format: Alphanumeric\n* maxLength: 17",
        "type": "string",
        "name": "lodging.customerServiceTollFreeNumber"
      },
      {
        "description": "Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Values can be: 'Y' or 'N'.\n* Format: Alphabetic\n* maxLength: 1",
        "type": "string",
        "name": "lodging.fireSafetyActIndicator"
      },
      {
        "description": "The folio cash advances.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "lodging.folioCashAdvances"
      },
      {
        "description": "Card acceptor’s internal invoice or billing ID reference number.\n* Format: Alphanumeric\n* maxLength: 25",
        "type": "string",
        "name": "lodging.folioNumber"
      },
      {
        "description": "Any charges for food and beverages associated with the booking.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "lodging.foodBeverageCharges"
      },
      {
        "description": "Indicates if the customer was a \"no-show\" (neither keeps nor cancels their booking).\n\nValue should be Y or N.\n* Format: Numeric\n* maxLength: 1",
        "type": "string",
        "name": "lodging.noShowIndicator"
      },
      {
        "description": "Prepaid expenses for the booking.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "lodging.prepaidExpenses"
      },
      {
        "description": "Identifies specific lodging property location by its local phone number.\n* Format: Alphanumeric\n* maxLength: 17",
        "type": "string",
        "name": "lodging.propertyPhoneNumber"
      },
      {
        "description": "Total number of nights the room will be rented.\n* Format: Numeric\n* maxLength: 4",
        "type": "string",
        "name": "lodging.room1.numberOfNights"
      },
      {
        "description": "The rate of the room.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "lodging.room1.rate"
      },
      {
        "description": "The total amount of tax to be paid.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "lodging.room1.tax"
      },
      {
        "description": "Total room tax amount.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "lodging.totalRoomTax"
      },
      {
        "description": "Total tax amount.\n* Format: Numeric\n* maxLength: 12",
        "type": "string",
        "name": "lodging.totalTax"
      },
      {
        "description": "Number of nights. This should be included in the auth message.\n* Format: Numeric\n* maxLength: 2",
        "type": "string",
        "name": "travelEntertainmentAuthData.duration"
      },
      {
        "description": "Indicates what market-specific dataset will be submitted or is being submitted. Value should be \"H\" for Hotel. This should be included in the auth message.\n\n* Format: Alphanumeric\n* maxLength: 1",
        "type": "string",
        "name": "travelEntertainmentAuthData.market"
      }
    ],
    "name": "AdditionalDataLodging"
  },
  {
    "properties": [
      {
        "description": "Holds different merchant data points like product, purchase, customer, and so on. It takes data in a Base64 encoded string.\n\nThe `merchantData` parameter needs to be added to the `openinvoicedata` signature at the end.\n\nSince the field is optional, if it's not included it does not impact computing the merchant signature.\n\nApplies only to Klarna.\n\nYou can contact Klarna for the format and structure of the string.",
        "type": "string",
        "name": "openinvoicedata.merchantData"
      },
      {
        "description": "The number of invoice lines included in `openinvoicedata`.\n\nThere needs to be at least one line, so `numberOfLines` needs to be at least 1.",
        "type": "string",
        "name": "openinvoicedata.numberOfLines"
      },
      {
        "description": "The three-character ISO currency code.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].currencyCode"
      },
      {
        "description": "A text description of the product the invoice line refers to.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].description"
      },
      {
        "description": "The price for one item in the invoice line, represented in minor units.\n\nThe due amount for the item, VAT excluded.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].itemAmount"
      },
      {
        "description": "A unique id for this item. Required for RatePay if the description of each item is not unique.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].itemId"
      },
      {
        "description": "The VAT due for one item in the invoice line, represented in minor units.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].itemVatAmount"
      },
      {
        "description": "The VAT percentage for one item in the invoice line, represented in minor units.\n\nFor example, 19% VAT is specified as 1900.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].itemVatPercentage"
      },
      {
        "description": "The number of units purchased of a specific product.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].numberOfItems"
      },
      {
        "description": "Name of the shipping company handling the the return shipment.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].returnShippingCompany"
      },
      {
        "description": "The tracking number for the return of the shipment.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].returnTrackingNumber"
      },
      {
        "description": "URI where the customer can track the return of their shipment.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].returnTrackingUri"
      },
      {
        "description": "Name of the shipping company handling the delivery.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].shippingCompany"
      },
      {
        "description": "Shipping method.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].shippingMethod"
      },
      {
        "description": "The tracking number for the shipment.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].trackingNumber"
      },
      {
        "description": "URI where the customer can track their shipment.",
        "type": "string",
        "name": "openinvoicedataLine[itemNr].trackingUri"
      }
    ],
    "name": "AdditionalDataOpenInvoice"
  },
  {
    "properties": [
      {
        "description": "Optional boolean indicator. Set to **true** if you want an ecommerce transaction to return an `opi.transToken` as additional data in the response.\n\nYou can store this Oracle Payment Interface token in your Oracle Opera database. For more information and required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce).",
        "type": "string",
        "name": "opi.includeTransToken"
      }
    ],
    "name": "AdditionalDataOpi"
  },
  {
    "properties": [
      {
        "description": "Amount the customer has to pay each month.",
        "type": "string",
        "name": "ratepay.installmentAmount"
      },
      {
        "description": "Interest rate of this installment.",
        "type": "string",
        "name": "ratepay.interestRate"
      },
      {
        "description": "Amount of the last installment.",
        "type": "string",
        "name": "ratepay.lastInstallmentAmount"
      },
      {
        "description": "Calendar day of the first payment.",
        "type": "string",
        "name": "ratepay.paymentFirstday"
      },
      {
        "description": "Date the merchant delivered the goods to the customer.",
        "type": "string",
        "name": "ratepaydata.deliveryDate"
      },
      {
        "description": "Date by which the customer must settle the payment.",
        "type": "string",
        "name": "ratepaydata.dueDate"
      },
      {
        "description": "Invoice date, defined by the merchant. If not included, the invoice date is set to the delivery date.",
        "type": "string",
        "name": "ratepaydata.invoiceDate"
      },
      {
        "description": "Identification name or number for the invoice, defined by the merchant.",
        "type": "string",
        "name": "ratepaydata.invoiceId"
      }
    ],
    "name": "AdditionalDataRatepay"
  },
  {
    "properties": [
      {
        "description": "The number of times the transaction (not order) has been retried between different payment service providers. For instance, the `chainAttemptNumber` set to 2 means that this transaction has been recently tried on another provider before being sent to Adyen.\n\n> If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.",
        "type": "string",
        "name": "retry.chainAttemptNumber"
      },
      {
        "description": "The index of the attempt to bill a particular order, which is identified by the `merchantOrderReference` field. For example, if a recurring transaction fails and is retried one day later, then the order number for these attempts would be 1 and 2, respectively.\n\n> If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.",
        "type": "string",
        "name": "retry.orderAttemptNumber"
      },
      {
        "description": "The Boolean value indicating whether Adyen should skip or retry this transaction, if possible.\n\n> If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.",
        "type": "string",
        "name": "retry.skipRetry"
      }
    ],
    "name": "AdditionalDataRetry"
  },
  {
    "properties": [
      {
        "description": "The data for your custom risk field. For more information, refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields).",
        "type": "string",
        "name": "riskdata.[customFieldName]"
      },
      {
        "description": "The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].amountPerItem"
      },
      {
        "description": "Brand of the item.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].brand"
      },
      {
        "description": "Category of the item.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].category"
      },
      {
        "description": "Color of the item.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].color"
      },
      {
        "description": "The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].currency"
      },
      {
        "description": "ID of the item.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].itemID"
      },
      {
        "description": "Manufacturer of the item.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].manufacturer"
      },
      {
        "description": "A text description of the product the invoice line refers to.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].productTitle"
      },
      {
        "description": "Quantity of the item purchased.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].quantity"
      },
      {
        "description": "Email associated with the given product in the basket (usually in electronic gift cards).",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].receiverEmail"
      },
      {
        "description": "Size of the item.",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].size"
      },
      {
        "description": "[Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit).",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].sku"
      },
      {
        "description": "[Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code).",
        "type": "string",
        "name": "riskdata.basket.item[itemNr].upc"
      },
      {
        "description": "Code of the promotion.",
        "type": "string",
        "name": "riskdata.promotions.promotion[itemNr].promotionCode"
      },
      {
        "description": "The discount amount of the promotion, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
        "type": "string",
        "name": "riskdata.promotions.promotion[itemNr].promotionDiscountAmount"
      },
      {
        "description": "The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).",
        "type": "string",
        "name": "riskdata.promotions.promotion[itemNr].promotionDiscountCurrency"
      },
      {
        "description": "Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.\n\ne.g. for a promotion discount of 30%, the value of the field should be 30.",
        "type": "string",
        "name": "riskdata.promotions.promotion[itemNr].promotionDiscountPercentage"
      },
      {
        "description": "Name of the promotion.",
        "type": "string",
        "name": "riskdata.promotions.promotion[itemNr].promotionName"
      },
      {
        "description": "Reference number of the risk profile that you want to apply to the payment. If not provided or left blank, the merchant-level account's default risk profile will be applied to the payment. For more information, see [dynamically assign a risk profile to a payment](https://docs.adyen.com/risk-management/create-and-use-risk-profiles#dynamically-assign-a-risk-profile-to-a-payment).",
        "type": "string",
        "name": "riskdata.riskProfileReference"
      },
      {
        "description": "If this parameter is provided with the value **true**, risk checks for the payment request are skipped and the transaction will not get a risk score.",
        "type": "string",
        "name": "riskdata.skipRisk"
      }
    ],
    "name": "AdditionalDataRisk"
  },
  {
    "properties": [
      {
        "description": "Shopper's country of residence in the form of ISO standard 3166 2-character country codes.",
        "type": "string",
        "name": "PayPal.CountryCode"
      },
      {
        "description": "Shopper's email.",
        "type": "string",
        "name": "PayPal.EmailId"
      },
      {
        "description": "Shopper's first name.",
        "type": "string",
        "name": "PayPal.FirstName"
      },
      {
        "description": "Shopper's last name.",
        "type": "string",
        "name": "PayPal.LastName"
      },
      {
        "description": "Unique PayPal Customer Account identification number. Character length and limitations: 13 single-byte alphanumeric characters.",
        "type": "string",
        "name": "PayPal.PayerId"
      },
      {
        "description": "Shopper's phone number.",
        "type": "string",
        "name": "PayPal.Phone"
      },
      {
        "description": "Allowed values:\n* **Eligible** — Merchant is protected by PayPal's Seller Protection Policy for Unauthorized Payments and Item Not Received.\n\n* **PartiallyEligible** — Merchant is protected by PayPal's Seller Protection Policy for Item Not Received.\n\n* **Ineligible** — Merchant is not protected under the Seller Protection Policy.",
        "type": "string",
        "name": "PayPal.ProtectionEligibility"
      },
      {
        "description": "Unique transaction ID of the payment.",
        "type": "string",
        "name": "PayPal.TransactionId"
      },
      {
        "description": "Raw AVS result received from the acquirer, where available. Example: D",
        "type": "string",
        "name": "avsResultRaw"
      },
      {
        "description": "The Bank Identification Number of a credit card, which is the first six digits of a card number. Required for [tokenized card request](https://docs.adyen.com/risk-management/standalone-risk#tokenised-pan-request).",
        "type": "string",
        "name": "bin"
      },
      {
        "description": "Raw CVC result received from the acquirer, where available. Example: 1",
        "type": "string",
        "name": "cvcResultRaw"
      },
      {
        "description": "Unique identifier or token for the shopper's card details.",
        "type": "string",
        "name": "riskToken"
      },
      {
        "description": "A Boolean value indicating whether 3DS authentication was completed on this payment. Example: true",
        "type": "string",
        "name": "threeDAuthenticated"
      },
      {
        "description": "A Boolean value indicating whether 3DS was offered for this payment. Example: true",
        "type": "string",
        "name": "threeDOffered"
      },
      {
        "description": "Required for PayPal payments only. The only supported value is: **paypal**.",
        "type": "string",
        "name": "tokenDataType"
      }
    ],
    "name": "AdditionalDataRiskStandalone"
  },
  {
    "properties": [
      {
        "description": "Required for transactions performed by registered payment facilitators. Indicates the number of sub-merchants contained in the request. For example, **3**.",
        "type": "string",
        "name": "subMerchant.numberOfSubSellers"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The city of the sub-merchant's address.\n* Format: Alphanumeric\n* Maximum length: 13 characters",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].city"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The three-letter country code of the sub-merchant's address. For example, **BRA** for Brazil. \n* Format: [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)\n* Fixed length: 3 characters",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].country"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. A unique identifier that you create for the sub-merchant, used by schemes to identify the sub-merchant. \n* Format: Alphanumeric\n* Maximum length: 15 characters",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].id"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The sub-merchant's 4-digit Merchant Category Code (MCC). \n* Format: Numeric\n* Fixed length: 4 digits",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].mcc"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The name of the sub-merchant. Based on scheme specifications, this value will overwrite the shopper statement  that will appear in the card statement.\n* Format: Alphanumeric\n* Maximum length: 22 characters",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].name"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The postal code of the sub-merchant's address, without dashes.\n* Format: Numeric\n* Fixed length: 8 digits",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].postalCode"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The state code of the sub-merchant's address, if applicable to the country.\n* Format: Alphanumeric\n* Maximum length: 2 characters",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].state"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The street name and house number of the sub-merchant's address.\n* Format: Alphanumeric\n* Maximum length: 60 characters",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].street"
      },
      {
        "description": "Required for transactions performed by registered payment facilitators. The tax ID of the sub-merchant.\n* Format: Numeric\n* Fixed length: 11 digits for the CPF or 14 digits for the CNPJ",
        "type": "string",
        "name": "subMerchant.subSeller[subSellerNr].taxId"
      }
    ],
    "name": "AdditionalDataSubMerchant"
  },
  {
    "properties": [
      {
        "description": "Customer code, if supplied by a customer.\n* Encoding: ASCII\n* maxLength: 25",
        "type": "string",
        "name": "enhancedSchemeData.customerReference"
      },
      {
        "description": "Name or ID associated with the individual working in a temporary capacity.\n* maxLength: 40",
        "type": "string",
        "name": "enhancedSchemeData.employeeName"
      },
      {
        "description": "Description of the job or task of the individual working in a temporary capacity.\n* maxLength: 40",
        "type": "string",
        "name": "enhancedSchemeData.jobDescription"
      },
      {
        "description": "Amount paid per regular hours worked, minor units.\n* maxLength: 7",
        "type": "string",
        "name": "enhancedSchemeData.regularHoursRate"
      },
      {
        "description": "Amount of time worked during a normal operation for the task or job.\n* maxLength: 7",
        "type": "string",
        "name": "enhancedSchemeData.regularHoursWorked"
      },
      {
        "description": "Name of the individual requesting temporary services.\n* maxLength: 40",
        "type": "string",
        "name": "enhancedSchemeData.requestName"
      },
      {
        "description": "Date for the beginning of the pay period.\n* Format: ddMMyy\n* maxLength: 6",
        "type": "string",
        "name": "enhancedSchemeData.tempStartDate"
      },
      {
        "description": "Date of the end of the billing cycle.\n* Format: ddMMyy\n* maxLength: 6",
        "type": "string",
        "name": "enhancedSchemeData.tempWeekEnding"
      },
      {
        "description": "Total tax amount, in minor units. For example, 2000 means USD 20.00\n* maxLength: 12",
        "type": "string",
        "name": "enhancedSchemeData.totalTaxAmount"
      }
    ],
    "name": "AdditionalDataTemporaryServices"
  },
  {
    "properties": [
      {
        "description": "The Android Pay token retrieved from the SDK.",
        "type": "string",
        "name": "androidpay.token"
      },
      {
        "description": "The Mastercard Masterpass Transaction ID retrieved from the SDK.",
        "type": "string",
        "name": "masterpass.transactionId"
      },
      {
        "description": "The Apple Pay token retrieved from the SDK.",
        "type": "string",
        "name": "payment.token"
      },
      {
        "description": "The Google Pay token retrieved from the SDK.",
        "type": "string",
        "name": "paywithgoogle.token"
      },
      {
        "description": "The Samsung Pay token retrieved from the SDK.",
        "type": "string",
        "name": "samsungpay.token"
      },
      {
        "description": "The Visa Checkout Call ID retrieved from the SDK.",
        "type": "string",
        "name": "visacheckout.callId"
      }
    ],
    "name": "AdditionalDataWallets"
  }
]
