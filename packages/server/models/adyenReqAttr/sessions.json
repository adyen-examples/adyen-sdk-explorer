[
  {
    "description": "The amount of the payment.",
    "properties": [
      {
        "description": "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
        "maxLength": 3,
        "minLength": 3,
        "type": "string",
        "name": "currency"
      },
      {
        "description": "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
        "format": "int64",
        "type": "integer",
        "name": "value"
      }
    ],
    "name": "amount"
  },
  {
    "description": "Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).",
    "properties": [
      {
        "description": "Adyen-developed software, such as libraries and plugins, used to interact with the Adyen API. For example, Magento plugin, Java API library, etc.",
        "$ref": "#/components/schemas/CommonField",
        "name": "adyenLibrary"
      },
      {
        "description": "Adyen-developed software to get payment details. For example, Checkout SDK, Secured Fields SDK, etc.",
        "$ref": "#/components/schemas/CommonField",
        "name": "adyenPaymentSource"
      },
      {
        "description": "Third-party developed platform used to initiate payment requests. For example, Magento, Zuora, etc.",
        "$ref": "#/components/schemas/ExternalPlatform",
        "name": "externalPlatform"
      },
      {
        "description": "Merchant developed software, such as cashier application, used to interact with the Adyen API.",
        "$ref": "#/components/schemas/CommonField",
        "name": "merchantApplication"
      },
      {
        "description": "Merchant device information.",
        "$ref": "#/components/schemas/MerchantDevice",
        "name": "merchantDevice"
      },
      {
        "description": "Shopper interaction device, such as terminal, mobile device or web browser, to initiate payment requests.",
        "$ref": "#/components/schemas/ShopperInteractionDevice",
        "name": "shopperInteractionDevice"
      }
    ],
    "name": "applicationInfo"
  },
  {
    "description": "The address where to send the invoice.",
    "properties": [
      {
        "description": "The name of the city. Maximum length: 3000 characters.",
        "maxLength": 3000,
        "type": "string",
        "name": "city"
      },
      {
        "description": "The two-character ISO-3166-1 alpha-2 country code. For example, **US**.\n> If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.",
        "type": "string",
        "name": "country"
      },
      {
        "description": "The number or name of the house. Maximum length: 3000 characters.",
        "maxLength": 3000,
        "type": "string",
        "name": "houseNumberOrName"
      },
      {
        "description": "A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.",
        "type": "string",
        "name": "postalCode"
      },
      {
        "description": "The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.\n> Required for the US and Canada.",
        "type": "string",
        "name": "stateOrProvince"
      },
      {
        "description": "The name of the street. Maximum length: 3000 characters.\n> The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.",
        "maxLength": 3000,
        "type": "string",
        "name": "street"
      }
    ],
    "name": "billingAddress"
  },
  {
    "description": "The delay between the authorisation and scheduled auto-capture, specified in hours.",
    "format": "int32",
    "type": "integer",
    "name": "captureDelayHours"
  },
  {
    "description": "The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.\n\nPossible values:\n* **iOS**\n* **Android**\n* **Web**",
    "enum": ["iOS", "Android", "Web"],
    "type": "string",
    "name": "channel"
  },
  {
    "description": "The shopper's two-letter country code.",
    "type": "string",
    "name": "countryCode"
  },
  {
    "description": "The shopper's date of birth.\n\nFormat [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD",
    "format": "date-time",
    "type": "string",
    "name": "dateOfBirth"
  },
  {
    "description": "The address where the purchased goods should be delivered.",
    "properties": [
      {
        "description": "The name of the city. Maximum length: 3000 characters.",
        "maxLength": 3000,
        "type": "string",
        "name": "city"
      },
      {
        "description": "The two-character ISO-3166-1 alpha-2 country code. For example, **US**.\n> If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.",
        "type": "string",
        "name": "country"
      },
      {
        "description": "The number or name of the house. Maximum length: 3000 characters.",
        "maxLength": 3000,
        "type": "string",
        "name": "houseNumberOrName"
      },
      {
        "description": "A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.",
        "type": "string",
        "name": "postalCode"
      },
      {
        "description": "The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.\n> Required for the US and Canada.",
        "type": "string",
        "name": "stateOrProvince"
      },
      {
        "description": "The name of the street. Maximum length: 3000 characters.\n> The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.",
        "maxLength": 3000,
        "type": "string",
        "name": "street"
      }
    ],
    "name": "deliveryAddress"
  },
  {
    "description": "The date the session expires in [ISO8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. When not specified, the expiry date is set to 1 hour after session creation. You cannot set the session expiry to more than 24 hours after session creation.",
    "format": "date-time",
    "type": "string",
    "name": "expiresAt"
  },
  {
    "description": "The merchant account identifier, with which you want to process the transaction.",
    "type": "string",
    "name": "merchantAccount"
  },
  {
    "additionalProperties": {
      "type": "string"
    },
    "description": "Metadata consists of entries, each of which includes a key and a value.\nLimits:\n* Maximum 20 key-value pairs per request.\n* Maximum 20 characters per key.\n* Maximum 80 characters per value. ",
    "type": "object",
    "name": "metadata"
  },
  {
    "description": "Defines a recurring payment type.\nAllowed values:\n* `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.\n* `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.\n* `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.\n",
    "enum": ["CardOnFile", "Subscription", "UnscheduledCardOnFile"],
    "type": "string",
    "name": "recurringProcessingModel"
  },
  {
    "description": "The reference to uniquely identify a payment.",
    "type": "string",
    "name": "reference"
  },
  {
    "description": "The URL to return to when a redirect payment is completed.",
    "type": "string",
    "name": "returnUrl"
  },
  {
    "description": "The payment session data you need to pass to your front end.",
    "type": "string",
    "name": "sessionData"
  },
  {
    "description": "The shopper's email address.",
    "type": "string",
    "name": "shopperEmail"
  },
  {
    "description": "Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.\nFor the web service API, Adyen assumes Ecommerce shopper interaction by default.\n\nThis field has the following possible values:\n* `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.\n* `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).\n* `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.\n* `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.",
    "enum": ["Ecommerce", "ContAuth", "Moto", "POS"],
    "type": "string",
    "name": "shopperInteraction"
  },
  {
    "description": "The combination of a language code and a country code to specify the language to be used in the payment.",
    "type": "string",
    "name": "shopperLocale"
  },
  {
    "description": "The shopper's full name. This object is required for some payment methods such as AfterPay, Klarna, or if you're enrolled in the PayPal Seller Protection program.",
    "properties": [
      {
        "description": "The first name.",
        "type": "string",
        "name": "firstName"
      },
      {
        "description": "The last name.",
        "type": "string",
        "name": "lastName"
      }
    ],
    "name": "shopperName"
  },
  {
    "description": "Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.\n> Your reference must not include personally identifiable information (PII), for example name or email address.",
    "type": "string",
    "name": "shopperReference"
  },
  {
    "description": "The ecommerce or point-of-sale store that is processing the payment.",
    "type": "string",
    "name": "store"
  },
  {
    "description": "When this is set to **true** and the `shopperReference` is provided, the payment details will be stored.",
    "type": "boolean",
    "name": "storePaymentMethod"
  },
  {
    "description": "The shopper's telephone number.",
    "type": "string",
    "name": "telephoneNumber"
  },
  {
    "default": false,
    "description": "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.",
    "type": "boolean",
    "name": "threeDSAuthenticationOnly"
  }
]
